HGA: Haskell Geometric Algebra
issac.trotts@gmail.com
Issac Trotts

This is an implementation of Geometric Algebra, also known as Clifford
Algebra. For ideas on how to use it, see
http://en.wikipedia.org/wiki/Geometric_algebra.

Examples:

    $ ghci
    Prelude> :load "Hga.hs"
    [1 of 1] Compiling Hga              ( Hga.hs, interpreted )
    Ok, modules loaded: Hga.
    *Hga> 4 * (vector [1,0] + vector[2,3]) * (vector[0,1])
    12.0 + 12.0`e`[1,2]
    *Hga> test_hga
    ...
    Reverse of a trivector is negated passed.
    vector inverse:
    +++ OK, passed 100 tests.

Limitations:

    For now, the only numerical type allowed for coordinates is Double. I'll
    probably change it to arbitrary Nums later on.

    This module currently represents only Euclidean spaces. I plan to extend it
    to non-Euclidean spaces by making Multivector a typeclass with a signature
    method.

